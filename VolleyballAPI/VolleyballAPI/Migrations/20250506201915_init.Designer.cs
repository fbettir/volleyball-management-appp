// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VolleyballAPI;

#nullable disable

namespace VolleyballAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506201915_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTeam", b =>
                {
                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("FavouriteTeams");

                    b.HasData(
                        new
                        {
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            UserId = new Guid("e045f223-30f3-4d3c-ba3b-964ccb1b2400")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTournament", b =>
                {
                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TournamentId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("FavouriteTournaments");

                    b.HasData(
                        new
                        {
                            TournamentId = new Guid("5373cd3d-96a5-4bc0-a4ed-b2aab8f563d1"),
                            UserId = new Guid("e045f223-30f3-4d3c-ba3b-964ccb1b2400")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTraining", b =>
                {
                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TrainingId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("FavouriteTrainings");

                    b.HasData(
                        new
                        {
                            TrainingId = new Guid("fa5d4c63-49c8-4d5a-a867-756694708b0c"),
                            UserId = new Guid("e045f223-30f3-4d3c-ba3b-964ccb1b2400")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Address = "Location Addr 1",
                            Name = "Location1"
                        },
                        new
                        {
                            Id = new Guid("21c59515-54f8-4dcd-92e1-afcd15548e37"),
                            Address = "Location Addr 2",
                            Name = "Location2"
                        },
                        new
                        {
                            Id = new Guid("0ee0f7ae-3e29-4d0d-bf03-e50f8ebbc282"),
                            Address = "Location Addr 3",
                            Name = "Location3"
                        },
                        new
                        {
                            Id = new Guid("65375840-06fc-4675-bd81-6e016c391e27"),
                            Address = "Location Addr 4",
                            Name = "Location4"
                        },
                        new
                        {
                            Id = new Guid("5fc64673-a3ca-44dd-983e-63cf5738ace2"),
                            Address = "Location Addr 5",
                            Name = "Location5"
                        },
                        new
                        {
                            Id = new Guid("bdf1d6db-3227-4fde-9932-e69e9939bf9c"),
                            Address = "Location Addr 6",
                            Name = "Location6"
                        },
                        new
                        {
                            Id = new Guid("7b1265ec-82ea-40d4-b2ab-b3cbec98f971"),
                            Address = "Location Addr 7",
                            Name = "Location7"
                        },
                        new
                        {
                            Id = new Guid("9e6979c4-57d0-4ad7-be1c-5999259f9e56"),
                            Address = "Location Addr 8",
                            Name = "Location8"
                        },
                        new
                        {
                            Id = new Guid("cfe4ca86-2e2a-40e0-899b-604be88fce39"),
                            Address = "Location Addr 9",
                            Name = "Location9"
                        },
                        new
                        {
                            Id = new Guid("11a213ee-89c5-4d40-8c89-65761ba758f0"),
                            Address = "Location Addr 10",
                            Name = "Location10"
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Points")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RefereeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("RefereeId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6dc00010-2011-4b7d-af96-6c285314dc4c"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6302),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b"),
                            StartTime = new DateTime(2024, 4, 3, 13, 55, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("77b0dbda-0682-472d-bba8-1a73489658a8"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6358),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a"),
                            StartTime = new DateTime(2024, 4, 3, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("4fc5cc31-72d3-4aa7-b3e6-728be8ac6aa8"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6361),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de"),
                            StartTime = new DateTime(2024, 4, 3, 14, 40, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("93ebf610-c2d1-4163-a0e2-a145d9b3c6f8"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6364),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            StartTime = new DateTime(2024, 4, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("76cb5fea-2d10-4208-b5ae-a00a1acec9b4"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6368),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2"),
                            StartTime = new DateTime(2024, 4, 3, 15, 25, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("8cf15dc8-bd93-4bc1-ac38-46326615c926"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6371),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de"),
                            StartTime = new DateTime(2024, 4, 3, 15, 50, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("1a8cec36-5db8-4bdf-8c24-56740bd92efc"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6374),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0"),
                            StartTime = new DateTime(2024, 4, 3, 16, 15, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("3266e415-be71-40ae-84b8-b075ecca7379"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6377),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b"),
                            StartTime = new DateTime(2024, 4, 3, 16, 40, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("e4911308-658c-4fa4-9c01-54a80c7cd2bd"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6381),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0"),
                            StartTime = new DateTime(2024, 4, 3, 17, 5, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("241b3542-fe36-4e9e-86c4-837448c24783"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6384),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052"),
                            StartTime = new DateTime(2024, 4, 3, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("df47e31a-1b47-4513-9d57-72baa5a9fb8b"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6387),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b"),
                            StartTime = new DateTime(2024, 4, 3, 17, 55, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("092e4455-83b7-4e21-9747-5b8dfee2a356"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6390),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0"),
                            StartTime = new DateTime(2024, 4, 3, 18, 20, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("344a101e-4435-4f55-9f23-9e161d5883cb"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6393),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a"),
                            StartTime = new DateTime(2024, 4, 3, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("1629bbd8-2ac5-416f-a653-89a733644010"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6397),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052"),
                            StartTime = new DateTime(2024, 4, 3, 19, 10, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("335dfe70-a521-4c1f-a33e-21a91a36173a"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6425),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0"),
                            StartTime = new DateTime(2024, 4, 3, 13, 55, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("67b79f6a-50f0-4f24-b50d-22e2e92b905a"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6429),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2"),
                            StartTime = new DateTime(2024, 4, 3, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("fb61c5d5-1513-475b-9e1c-cc002fa14501"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6432),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0"),
                            StartTime = new DateTime(2024, 4, 3, 14, 40, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("f9f2ff1a-23cd-4760-a14e-b9f3bc991de5"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6435),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a"),
                            StartTime = new DateTime(2024, 4, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("610c2b55-5af5-40b4-98e6-9047be14b787"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6439),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0"),
                            StartTime = new DateTime(2024, 4, 3, 15, 25, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("016da2ba-c425-4d14-b0bc-771e8d1a070c"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6442),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            StartTime = new DateTime(2024, 4, 3, 15, 50, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("b7ebd0fc-231c-4593-b626-2ff7ed232607"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6445),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2"),
                            StartTime = new DateTime(2024, 4, 3, 16, 15, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("1da10b48-f537-4428-a8a4-45151e5ed2bb"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6448),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052"),
                            StartTime = new DateTime(2024, 4, 3, 16, 40, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("aa800f65-5d63-4cf1-8856-5b0cbebaaebb"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6452),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de"),
                            StartTime = new DateTime(2024, 4, 3, 17, 5, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("f7b8f141-034f-43b8-bb5e-f88b967c617e"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6455),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0"),
                            StartTime = new DateTime(2024, 4, 3, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("ad0557b3-8ef0-4e87-bf3e-f697e10919e6"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6458),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a"),
                            StartTime = new DateTime(2024, 4, 3, 17, 55, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("e175d1f9-5c43-4f72-aab6-87d5d30cb831"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6461),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b"),
                            StartTime = new DateTime(2024, 4, 3, 18, 20, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("291515fe-9c65-41e1-ae42-131adbd14171"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6465),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            StartTime = new DateTime(2024, 4, 3, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("abf9d241-9110-45ab-9d1e-cc0dcfd0cd06"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6468),
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Points = "[0,0]",
                            RefereeId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2"),
                            StartTime = new DateTime(2024, 4, 3, 19, 10, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1")
                        },
                        new
                        {
                            Id = new Guid("8f604272-9941-46af-a6e9-7e746c2204a8"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6471),
                            LocationId = new Guid("21c59515-54f8-4dcd-92e1-afcd15548e37"),
                            Points = "[0,0]",
                            RefereeId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            StartTime = new DateTime(2024, 4, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("5373cd3d-96a5-4bc0-a4ed-b2aab8f563d1")
                        },
                        new
                        {
                            Id = new Guid("648c76d1-32a4-4a53-8893-e14d6ee4942b"),
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6475),
                            LocationId = new Guid("0ee0f7ae-3e29-4d0d-bf03-e50f8ebbc282"),
                            Points = "[0,0]",
                            RefereeId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            StartTime = new DateTime(2024, 4, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("e86bab50-4d0d-438b-a1a3-f706c08c1d66")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.MatchTeam", b =>
                {
                    b.Property<Guid>("MatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MatchId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("MatchTeams");

                    b.HasData(
                        new
                        {
                            MatchId = new Guid("6dc00010-2011-4b7d-af96-6c285314dc4c"),
                            TeamId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0")
                        },
                        new
                        {
                            MatchId = new Guid("6dc00010-2011-4b7d-af96-6c285314dc4c"),
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052")
                        },
                        new
                        {
                            MatchId = new Guid("77b0dbda-0682-472d-bba8-1a73489658a8"),
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052")
                        },
                        new
                        {
                            MatchId = new Guid("77b0dbda-0682-472d-bba8-1a73489658a8"),
                            TeamId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de")
                        },
                        new
                        {
                            MatchId = new Guid("4fc5cc31-72d3-4aa7-b3e6-728be8ac6aa8"),
                            TeamId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b")
                        },
                        new
                        {
                            MatchId = new Guid("4fc5cc31-72d3-4aa7-b3e6-728be8ac6aa8"),
                            TeamId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a")
                        },
                        new
                        {
                            MatchId = new Guid("93ebf610-c2d1-4163-a0e2-a145d9b3c6f8"),
                            TeamId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b")
                        },
                        new
                        {
                            MatchId = new Guid("93ebf610-c2d1-4163-a0e2-a145d9b3c6f8"),
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2")
                        },
                        new
                        {
                            MatchId = new Guid("76cb5fea-2d10-4208-b5ae-a00a1acec9b4"),
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052")
                        },
                        new
                        {
                            MatchId = new Guid("76cb5fea-2d10-4208-b5ae-a00a1acec9b4"),
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83")
                        },
                        new
                        {
                            MatchId = new Guid("8cf15dc8-bd93-4bc1-ac38-46326615c926"),
                            TeamId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b")
                        },
                        new
                        {
                            MatchId = new Guid("8cf15dc8-bd93-4bc1-ac38-46326615c926"),
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0")
                        },
                        new
                        {
                            MatchId = new Guid("1a8cec36-5db8-4bdf-8c24-56740bd92efc"),
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052")
                        },
                        new
                        {
                            MatchId = new Guid("1a8cec36-5db8-4bdf-8c24-56740bd92efc"),
                            TeamId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b")
                        },
                        new
                        {
                            MatchId = new Guid("3266e415-be71-40ae-84b8-b075ecca7379"),
                            TeamId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de")
                        },
                        new
                        {
                            MatchId = new Guid("3266e415-be71-40ae-84b8-b075ecca7379"),
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2")
                        },
                        new
                        {
                            MatchId = new Guid("e4911308-658c-4fa4-9c01-54a80c7cd2bd"),
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052")
                        },
                        new
                        {
                            MatchId = new Guid("e4911308-658c-4fa4-9c01-54a80c7cd2bd"),
                            TeamId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a")
                        },
                        new
                        {
                            MatchId = new Guid("241b3542-fe36-4e9e-86c4-837448c24783"),
                            TeamId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de")
                        },
                        new
                        {
                            MatchId = new Guid("241b3542-fe36-4e9e-86c4-837448c24783"),
                            TeamId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b")
                        },
                        new
                        {
                            MatchId = new Guid("df47e31a-1b47-4513-9d57-72baa5a9fb8b"),
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052")
                        },
                        new
                        {
                            MatchId = new Guid("df47e31a-1b47-4513-9d57-72baa5a9fb8b"),
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2")
                        },
                        new
                        {
                            MatchId = new Guid("092e4455-83b7-4e21-9747-5b8dfee2a356"),
                            TeamId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a")
                        },
                        new
                        {
                            MatchId = new Guid("092e4455-83b7-4e21-9747-5b8dfee2a356"),
                            TeamId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de")
                        },
                        new
                        {
                            MatchId = new Guid("344a101e-4435-4f55-9f23-9e161d5883cb"),
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0")
                        },
                        new
                        {
                            MatchId = new Guid("344a101e-4435-4f55-9f23-9e161d5883cb"),
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052")
                        },
                        new
                        {
                            MatchId = new Guid("1629bbd8-2ac5-416f-a653-89a733644010"),
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0")
                        },
                        new
                        {
                            MatchId = new Guid("1629bbd8-2ac5-416f-a653-89a733644010"),
                            TeamId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de")
                        },
                        new
                        {
                            MatchId = new Guid("335dfe70-a521-4c1f-a33e-21a91a36173a"),
                            TeamId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de")
                        },
                        new
                        {
                            MatchId = new Guid("335dfe70-a521-4c1f-a33e-21a91a36173a"),
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83")
                        },
                        new
                        {
                            MatchId = new Guid("67b79f6a-50f0-4f24-b50d-22e2e92b905a"),
                            TeamId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0")
                        },
                        new
                        {
                            MatchId = new Guid("67b79f6a-50f0-4f24-b50d-22e2e92b905a"),
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83")
                        },
                        new
                        {
                            MatchId = new Guid("fb61c5d5-1513-475b-9e1c-cc002fa14501"),
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2")
                        },
                        new
                        {
                            MatchId = new Guid("fb61c5d5-1513-475b-9e1c-cc002fa14501"),
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0")
                        },
                        new
                        {
                            MatchId = new Guid("f9f2ff1a-23cd-4760-a14e-b9f3bc991de5"),
                            TeamId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a")
                        },
                        new
                        {
                            MatchId = new Guid("f9f2ff1a-23cd-4760-a14e-b9f3bc991de5"),
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0")
                        },
                        new
                        {
                            MatchId = new Guid("610c2b55-5af5-40b4-98e6-9047be14b787"),
                            TeamId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de")
                        },
                        new
                        {
                            MatchId = new Guid("610c2b55-5af5-40b4-98e6-9047be14b787"),
                            TeamId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0")
                        },
                        new
                        {
                            MatchId = new Guid("016da2ba-c425-4d14-b0bc-771e8d1a070c"),
                            TeamId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a")
                        },
                        new
                        {
                            MatchId = new Guid("016da2ba-c425-4d14-b0bc-771e8d1a070c"),
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2")
                        },
                        new
                        {
                            MatchId = new Guid("b7ebd0fc-231c-4593-b626-2ff7ed232607"),
                            TeamId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0")
                        },
                        new
                        {
                            MatchId = new Guid("b7ebd0fc-231c-4593-b626-2ff7ed232607"),
                            TeamId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a")
                        },
                        new
                        {
                            MatchId = new Guid("1da10b48-f537-4428-a8a4-45151e5ed2bb"),
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83")
                        },
                        new
                        {
                            MatchId = new Guid("1da10b48-f537-4428-a8a4-45151e5ed2bb"),
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0")
                        },
                        new
                        {
                            MatchId = new Guid("aa800f65-5d63-4cf1-8856-5b0cbebaaebb"),
                            TeamId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0")
                        },
                        new
                        {
                            MatchId = new Guid("aa800f65-5d63-4cf1-8856-5b0cbebaaebb"),
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2")
                        },
                        new
                        {
                            MatchId = new Guid("f7b8f141-034f-43b8-bb5e-f88b967c617e"),
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83")
                        },
                        new
                        {
                            MatchId = new Guid("f7b8f141-034f-43b8-bb5e-f88b967c617e"),
                            TeamId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a")
                        },
                        new
                        {
                            MatchId = new Guid("ad0557b3-8ef0-4e87-bf3e-f697e10919e6"),
                            TeamId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0")
                        },
                        new
                        {
                            MatchId = new Guid("ad0557b3-8ef0-4e87-bf3e-f697e10919e6"),
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0")
                        },
                        new
                        {
                            MatchId = new Guid("e175d1f9-5c43-4f72-aab6-87d5d30cb831"),
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83")
                        },
                        new
                        {
                            MatchId = new Guid("e175d1f9-5c43-4f72-aab6-87d5d30cb831"),
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2")
                        },
                        new
                        {
                            MatchId = new Guid("291515fe-9c65-41e1-ae42-131adbd14171"),
                            TeamId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0")
                        },
                        new
                        {
                            MatchId = new Guid("291515fe-9c65-41e1-ae42-131adbd14171"),
                            TeamId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b")
                        },
                        new
                        {
                            MatchId = new Guid("abf9d241-9110-45ab-9d1e-cc0dcfd0cd06"),
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83")
                        },
                        new
                        {
                            MatchId = new Guid("abf9d241-9110-45ab-9d1e-cc0dcfd0cd06"),
                            TeamId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b")
                        },
                        new
                        {
                            MatchId = new Guid("8f604272-9941-46af-a6e9-7e746c2204a8"),
                            TeamId = new Guid("f9b9dde8-554c-4e9d-b0da-a38d850a698d")
                        },
                        new
                        {
                            MatchId = new Guid("8f604272-9941-46af-a6e9-7e746c2204a8"),
                            TeamId = new Guid("af3353d2-6917-4bf7-b41c-7a8cf647cead")
                        },
                        new
                        {
                            MatchId = new Guid("648c76d1-32a4-4a53-8893-e14d6ee4942b"),
                            TeamId = new Guid("d1569b4f-8fa0-4764-9838-09d86096347e")
                        },
                        new
                        {
                            MatchId = new Guid("648c76d1-32a4-4a53-8893-e14d6ee4942b"),
                            TeamId = new Guid("bca36ab3-45e9-4526-bea7-9f69efe8b756")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PictureLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            Description = "Description Team 1",
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            Name = "Team 1",
                            OwnerId = new Guid("e045f223-30f3-4d3c-ba3b-964ccb1b2400"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_101126_adrian.jpg"
                        },
                        new
                        {
                            Id = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0"),
                            Description = "Description Team 2",
                            LocationId = new Guid("21c59515-54f8-4dcd-92e1-afcd15548e37"),
                            Name = "Team 2",
                            OwnerId = new Guid("ba63f9c1-f700-438b-bb95-44119038a9cf"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_210101_kendras.jpg"
                        },
                        new
                        {
                            Id = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052"),
                            Description = "Description Team 3",
                            LocationId = new Guid("0ee0f7ae-3e29-4d0d-bf03-e50f8ebbc282"),
                            Name = "Team 3",
                            OwnerId = new Guid("fff56dce-bd08-4889-be77-3a8ab228cd84"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_111756_adrian.jpg"
                        },
                        new
                        {
                            Id = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2"),
                            Description = "Description Team 4",
                            LocationId = new Guid("65375840-06fc-4675-bd81-6e016c391e27"),
                            Name = "Team 4",
                            OwnerId = new Guid("85f1ac4f-1927-4f2e-b071-dd5cf8f22009"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_104600_adrian.jpg"
                        },
                        new
                        {
                            Id = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0"),
                            Description = "Description Team 5",
                            LocationId = new Guid("5fc64673-a3ca-44dd-983e-63cf5738ace2"),
                            Name = "Team 5",
                            OwnerId = new Guid("fff56dce-bd08-4889-be77-3a8ab228cd84"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_104618_david.jpg"
                        },
                        new
                        {
                            Id = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b"),
                            Description = "Description Team 6",
                            LocationId = new Guid("bdf1d6db-3227-4fde-9932-e69e9939bf9c"),
                            Name = "Team 6",
                            OwnerId = new Guid("e26e1d69-523a-4564-b7c9-1c64bf4eca5d"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_104459_david.jpg"
                        },
                        new
                        {
                            Id = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a"),
                            Description = "Description Team 7",
                            LocationId = new Guid("7b1265ec-82ea-40d4-b2ab-b3cbec98f971"),
                            Name = "Team 7",
                            OwnerId = new Guid("5cdda27c-de07-4092-9ead-43fa45aa7fc0"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_111742_david.jpg"
                        },
                        new
                        {
                            Id = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de"),
                            Description = "Description Team 8",
                            LocationId = new Guid("9e6979c4-57d0-4ad7-be1c-5999259f9e56"),
                            Name = "Team 8",
                            OwnerId = new Guid("a35a3bee-8d57-4e50-8cc9-8c77b66ac488"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190545_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("f9b9dde8-554c-4e9d-b0da-a38d850a698d"),
                            Description = "Description Team 9",
                            LocationId = new Guid("cfe4ca86-2e2a-40e0-899b-604be88fce39"),
                            Name = "Team 9",
                            OwnerId = new Guid("0d13b6d7-d4ec-4ffc-ab2a-d59ae1774e77"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("af3353d2-6917-4bf7-b41c-7a8cf647cead"),
                            Description = "Description Team 10",
                            LocationId = new Guid("65375840-06fc-4675-bd81-6e016c391e27"),
                            Name = "Team 10",
                            OwnerId = new Guid("e045f223-30f3-4d3c-ba3b-964ccb1b2400"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_165442_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("d1569b4f-8fa0-4764-9838-09d86096347e"),
                            Description = "Description Team 11",
                            LocationId = new Guid("0ee0f7ae-3e29-4d0d-bf03-e50f8ebbc282"),
                            Name = "Team 11",
                            OwnerId = new Guid("e045f223-30f3-4d3c-ba3b-964ccb1b2400"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20231014_muegyetemi_roplabda/2048/20231014_134530_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("bca36ab3-45e9-4526-bea7-9f69efe8b756"),
                            Description = "Description Team 12",
                            LocationId = new Guid("65375840-06fc-4675-bd81-6e016c391e27"),
                            Name = "Team 12",
                            OwnerId = new Guid("fff56dce-bd08-4889-be77-3a8ab228cd84"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20231014_muegyetemi_roplabda/2048/20231014_203137_opeter.jpg"
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TeamCoach", b =>
                {
                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamCoaches");

                    b.HasData(
                        new
                        {
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            UserId = new Guid("e045f223-30f3-4d3c-ba3b-964ccb1b2400")
                        },
                        new
                        {
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            UserId = new Guid("ba63f9c1-f700-438b-bb95-44119038a9cf")
                        },
                        new
                        {
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0"),
                            UserId = new Guid("fff56dce-bd08-4889-be77-3a8ab228cd84")
                        },
                        new
                        {
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052"),
                            UserId = new Guid("85f1ac4f-1927-4f2e-b071-dd5cf8f22009")
                        },
                        new
                        {
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2"),
                            UserId = new Guid("41d18784-2066-40a6-9aca-25c57ad94cf7")
                        },
                        new
                        {
                            TeamId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0"),
                            UserId = new Guid("e26e1d69-523a-4564-b7c9-1c64bf4eca5d")
                        },
                        new
                        {
                            TeamId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b"),
                            UserId = new Guid("5cdda27c-de07-4092-9ead-43fa45aa7fc0")
                        },
                        new
                        {
                            TeamId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a"),
                            UserId = new Guid("a35a3bee-8d57-4e50-8cc9-8c77b66ac488")
                        },
                        new
                        {
                            TeamId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de"),
                            UserId = new Guid("0d13b6d7-d4ec-4ffc-ab2a-d59ae1774e77")
                        },
                        new
                        {
                            TeamId = new Guid("f9b9dde8-554c-4e9d-b0da-a38d850a698d"),
                            UserId = new Guid("78ffef69-d0b8-48d8-a14a-a0dd01ec679d")
                        },
                        new
                        {
                            TeamId = new Guid("af3353d2-6917-4bf7-b41c-7a8cf647cead"),
                            UserId = new Guid("78ffef69-d0b8-48d8-a14a-a0dd01ec679d")
                        },
                        new
                        {
                            TeamId = new Guid("d1569b4f-8fa0-4764-9838-09d86096347e"),
                            UserId = new Guid("41d18784-2066-40a6-9aca-25c57ad94cf7")
                        },
                        new
                        {
                            TeamId = new Guid("bca36ab3-45e9-4526-bea7-9f69efe8b756"),
                            UserId = new Guid("a35a3bee-8d57-4e50-8cc9-8c77b66ac488")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TeamPlayer", b =>
                {
                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamPlayers");

                    b.HasData(
                        new
                        {
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            UserId = new Guid("e045f223-30f3-4d3c-ba3b-964ccb1b2400")
                        },
                        new
                        {
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0"),
                            UserId = new Guid("ba63f9c1-f700-438b-bb95-44119038a9cf")
                        },
                        new
                        {
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            UserId = new Guid("fff56dce-bd08-4889-be77-3a8ab228cd84")
                        },
                        new
                        {
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0"),
                            UserId = new Guid("85f1ac4f-1927-4f2e-b071-dd5cf8f22009")
                        },
                        new
                        {
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83"),
                            UserId = new Guid("41d18784-2066-40a6-9aca-25c57ad94cf7")
                        },
                        new
                        {
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052"),
                            UserId = new Guid("e26e1d69-523a-4564-b7c9-1c64bf4eca5d")
                        },
                        new
                        {
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052"),
                            UserId = new Guid("5cdda27c-de07-4092-9ead-43fa45aa7fc0")
                        },
                        new
                        {
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052"),
                            UserId = new Guid("a35a3bee-8d57-4e50-8cc9-8c77b66ac488")
                        },
                        new
                        {
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2"),
                            UserId = new Guid("0d13b6d7-d4ec-4ffc-ab2a-d59ae1774e77")
                        },
                        new
                        {
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2"),
                            UserId = new Guid("78ffef69-d0b8-48d8-a14a-a0dd01ec679d")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Categories")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDeadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Organizer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceType")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationPolicy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamPolicy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("34e11b96-420c-4853-99ca-01b73be943b1"),
                            Categories = 5,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6725),
                            Description = "Description Tournament 1",
                            EntryDeadline = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6728),
                            LocationId = new Guid("21c59515-54f8-4dcd-92e1-afcd15548e37"),
                            Name = "Tournament 1",
                            Organizer = "Organizer 1",
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_211740_barczy.jpg",
                            PriceType = 16,
                            RegistrationPolicy = "Registration Policy 1",
                            TeamPolicy = "Team Policy 1"
                        },
                        new
                        {
                            Id = new Guid("5373cd3d-96a5-4bc0-a4ed-b2aab8f563d1"),
                            Categories = 4,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6731),
                            Description = "Description Tournament 2",
                            EntryDeadline = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6733),
                            LocationId = new Guid("0ee0f7ae-3e29-4d0d-bf03-e50f8ebbc282"),
                            Name = "Tournament 2",
                            Organizer = "Organizer 2",
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20241123_muegyetemi_roplabdatorna_november/2048/20241123_142046_kendras.jpg",
                            PriceType = 16,
                            RegistrationPolicy = "Registration Policy 2",
                            TeamPolicy = "Team Policy 2"
                        },
                        new
                        {
                            Id = new Guid("e86bab50-4d0d-438b-a1a3-f706c08c1d66"),
                            Categories = 1,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6736),
                            Description = "Description Tournament 3",
                            EntryDeadline = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6738),
                            LocationId = new Guid("65375840-06fc-4675-bd81-6e016c391e27"),
                            Name = "Tournament 3",
                            Organizer = "Organizer 3",
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_145814_kendras.jpg",
                            PriceType = 16,
                            RegistrationPolicy = "Registration Policy 3",
                            TeamPolicy = "Team Policy 3"
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TournamentCompetitor", b =>
                {
                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TournamentId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("TournamentCompetitors");

                    b.HasData(
                        new
                        {
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1"),
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83")
                        },
                        new
                        {
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1"),
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0")
                        },
                        new
                        {
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1"),
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052")
                        },
                        new
                        {
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1"),
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2")
                        },
                        new
                        {
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1"),
                            TeamId = new Guid("b7aa910a-851d-4198-822d-eb43ce2f81d0")
                        },
                        new
                        {
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1"),
                            TeamId = new Guid("b5bab9c2-5558-4728-b491-90475d7e226b")
                        },
                        new
                        {
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1"),
                            TeamId = new Guid("b61b0a6b-7ef2-40c1-942f-9d1618a26b0a")
                        },
                        new
                        {
                            TournamentId = new Guid("34e11b96-420c-4853-99ca-01b73be943b1"),
                            TeamId = new Guid("5b58e0d7-8f7f-4398-9cfa-235799d908de")
                        },
                        new
                        {
                            TournamentId = new Guid("5373cd3d-96a5-4bc0-a4ed-b2aab8f563d1"),
                            TeamId = new Guid("f9b9dde8-554c-4e9d-b0da-a38d850a698d")
                        },
                        new
                        {
                            TournamentId = new Guid("5373cd3d-96a5-4bc0-a4ed-b2aab8f563d1"),
                            TeamId = new Guid("af3353d2-6917-4bf7-b41c-7a8cf647cead")
                        },
                        new
                        {
                            TournamentId = new Guid("e86bab50-4d0d-438b-a1a3-f706c08c1d66"),
                            TeamId = new Guid("d1569b4f-8fa0-4764-9838-09d86096347e")
                        },
                        new
                        {
                            TournamentId = new Guid("e86bab50-4d0d-438b-a1a3-f706c08c1d66"),
                            TeamId = new Guid("bca36ab3-45e9-4526-bea7-9f69efe8b756")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AcceptableTickets")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PictureLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("TeamId");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa5d4c63-49c8-4d5a-a867-756694708b0c"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6824),
                            Description = "Training1",
                            LocationId = new Guid("a54965c5-3914-49a4-a1ee-1b727dcd0d30"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_152608_kendras.jpg",
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83")
                        },
                        new
                        {
                            Id = new Guid("61efd86d-fd7e-4190-b2cc-5b4458ecee58"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6828),
                            Description = "Training2",
                            LocationId = new Guid("21c59515-54f8-4dcd-92e1-afcd15548e37"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_182542_kendras.jpg",
                            TeamId = new Guid("9137dac2-41f8-41e6-b5a8-375a4494ed83")
                        },
                        new
                        {
                            Id = new Guid("c466f828-ed78-4d3d-8eed-9c834f10eaed"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6830),
                            Description = "Training3",
                            LocationId = new Guid("0ee0f7ae-3e29-4d0d-bf03-e50f8ebbc282"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_192702_kendras.jpg",
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0")
                        },
                        new
                        {
                            Id = new Guid("8cadf95f-5dc9-429c-987b-4594bb3a0a66"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6832),
                            Description = "Training4",
                            LocationId = new Guid("0ee0f7ae-3e29-4d0d-bf03-e50f8ebbc282"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_114846_adrian.jpg",
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052")
                        },
                        new
                        {
                            Id = new Guid("dc9837ce-2674-4f06-88ac-fc757fb1da72"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6835),
                            Description = "Training5",
                            LocationId = new Guid("5fc64673-a3ca-44dd-983e-63cf5738ace2"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_121150_adrian.jpg",
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052")
                        },
                        new
                        {
                            Id = new Guid("2584365b-8c11-442e-b239-195fc18ac2e5"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6837),
                            Description = "Training6",
                            LocationId = new Guid("bdf1d6db-3227-4fde-9932-e69e9939bf9c"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_130940_adrian.jpg",
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0")
                        },
                        new
                        {
                            Id = new Guid("a7c24677-3177-471a-b266-0f12c3591ac3"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6840),
                            Description = "Training7",
                            LocationId = new Guid("7b1265ec-82ea-40d4-b2ab-b3cbec98f971"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_162113_adrian.jpg",
                            TeamId = new Guid("0c8dce11-4a7e-49ea-a1d3-d523a36c5052")
                        },
                        new
                        {
                            Id = new Guid("d74909cc-a655-414a-aeff-a5f705c62240"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6842),
                            Description = "Training8",
                            LocationId = new Guid("9e6979c4-57d0-4ad7-be1c-5999259f9e56"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_182355_gery.jpg",
                            TeamId = new Guid("56be0aa4-db65-4b88-9046-12ea002068e0")
                        },
                        new
                        {
                            Id = new Guid("e81b2ce8-7a28-43c5-9202-0498dd4c799e"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6844),
                            Description = "Training9",
                            LocationId = new Guid("cfe4ca86-2e2a-40e0-899b-604be88fce39"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_215753_gyongyi.jpg",
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2")
                        },
                        new
                        {
                            Id = new Guid("ba08c5db-e916-4ffc-bb31-f7ab454ad01e"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6847),
                            Description = "Training10",
                            LocationId = new Guid("11a213ee-89c5-4d40-8c89-65761ba758f0"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_183319_kendras.jpg",
                            TeamId = new Guid("de3dd0c8-ce59-481a-967c-add0c79801c2")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TrainingParticipant", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "TrainingId");

                    b.HasIndex("TrainingId");

                    b.ToTable("TrainingParticipants");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("e045f223-30f3-4d3c-ba3b-964ccb1b2400"),
                            TrainingId = new Guid("fa5d4c63-49c8-4d5a-a867-756694708b0c")
                        },
                        new
                        {
                            UserId = new Guid("ba63f9c1-f700-438b-bb95-44119038a9cf"),
                            TrainingId = new Guid("61efd86d-fd7e-4190-b2cc-5b4458ecee58")
                        },
                        new
                        {
                            UserId = new Guid("fff56dce-bd08-4889-be77-3a8ab228cd84"),
                            TrainingId = new Guid("c466f828-ed78-4d3d-8eed-9c834f10eaed")
                        },
                        new
                        {
                            UserId = new Guid("85f1ac4f-1927-4f2e-b071-dd5cf8f22009"),
                            TrainingId = new Guid("8cadf95f-5dc9-429c-987b-4594bb3a0a66")
                        },
                        new
                        {
                            UserId = new Guid("41d18784-2066-40a6-9aca-25c57ad94cf7"),
                            TrainingId = new Guid("dc9837ce-2674-4f06-88ac-fc757fb1da72")
                        },
                        new
                        {
                            UserId = new Guid("e26e1d69-523a-4564-b7c9-1c64bf4eca5d"),
                            TrainingId = new Guid("2584365b-8c11-442e-b239-195fc18ac2e5")
                        },
                        new
                        {
                            UserId = new Guid("5cdda27c-de07-4092-9ead-43fa45aa7fc0"),
                            TrainingId = new Guid("a7c24677-3177-471a-b266-0f12c3591ac3")
                        },
                        new
                        {
                            UserId = new Guid("a35a3bee-8d57-4e50-8cc9-8c77b66ac488"),
                            TrainingId = new Guid("d74909cc-a655-414a-aeff-a5f705c62240")
                        },
                        new
                        {
                            UserId = new Guid("0d13b6d7-d4ec-4ffc-ab2a-d59ae1774e77"),
                            TrainingId = new Guid("e81b2ce8-7a28-43c5-9202-0498dd4c799e")
                        },
                        new
                        {
                            UserId = new Guid("78ffef69-d0b8-48d8-a14a-a0dd01ec679d"),
                            TrainingId = new Guid("ba08c5db-e916-4ffc-bb31-f7ab454ad01e")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerNumber")
                        .HasColumnType("int");

                    b.Property<int>("Posts")
                        .HasColumnType("int");

                    b.Property<int>("PriceType")
                        .HasColumnType("int");

                    b.Property<int>("Roles")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e045f223-30f3-4d3c-ba3b-964ccb1b2400"),
                            Birthday = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6905),
                            Email = "user1@user.com",
                            Gender = 0,
                            Name = "Jancsi",
                            Password = "pass1",
                            Phone = "34214124",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 2,
                            Roles = 3
                        },
                        new
                        {
                            Id = new Guid("ba63f9c1-f700-438b-bb95-44119038a9cf"),
                            Birthday = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6909),
                            Email = "user2@user.com",
                            Gender = 1,
                            Name = "Aranka",
                            Password = "pass2",
                            Phone = "965463",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 5
                        },
                        new
                        {
                            Id = new Guid("fff56dce-bd08-4889-be77-3a8ab228cd84"),
                            Birthday = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6912),
                            Email = "user3@user.com",
                            Gender = 0,
                            Name = "Dani",
                            Password = "pass3",
                            Phone = "123555",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 4
                        },
                        new
                        {
                            Id = new Guid("85f1ac4f-1927-4f2e-b071-dd5cf8f22009"),
                            Birthday = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6915),
                            Email = "user4@user.com",
                            Gender = 0,
                            Name = "Kristóf",
                            Password = "pass4",
                            Phone = "83568",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 4
                        },
                        new
                        {
                            Id = new Guid("41d18784-2066-40a6-9aca-25c57ad94cf7"),
                            Birthday = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6918),
                            Email = "user5@user.com",
                            Gender = 0,
                            Name = "Lajos",
                            Password = "pass5",
                            Phone = "54337",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 4,
                            Roles = 2
                        },
                        new
                        {
                            Id = new Guid("e26e1d69-523a-4564-b7c9-1c64bf4eca5d"),
                            Birthday = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6921),
                            Email = "user6@user.com",
                            Gender = 0,
                            Name = "Péter",
                            Password = "pass6",
                            Phone = "4221",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 4
                        },
                        new
                        {
                            Id = new Guid("5cdda27c-de07-4092-9ead-43fa45aa7fc0"),
                            Birthday = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6924),
                            Email = "user7@user.com",
                            Gender = 1,
                            Name = "Felícia",
                            Password = "pass7",
                            Phone = "32134",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 2
                        },
                        new
                        {
                            Id = new Guid("a35a3bee-8d57-4e50-8cc9-8c77b66ac488"),
                            Birthday = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6927),
                            Email = "user8@user.com",
                            Gender = 0,
                            Name = "Name 8",
                            Password = "pass8",
                            Phone = "893935",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 5
                        },
                        new
                        {
                            Id = new Guid("0d13b6d7-d4ec-4ffc-ab2a-d59ae1774e77"),
                            Birthday = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6930),
                            Email = "user9@user.com",
                            Gender = 0,
                            Name = "Name 9",
                            Password = "pass9",
                            Phone = "2716717",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 4
                        },
                        new
                        {
                            Id = new Guid("78ffef69-d0b8-48d8-a14a-a0dd01ec679d"),
                            Birthday = new DateTime(2025, 5, 6, 22, 19, 13, 418, DateTimeKind.Local).AddTicks(6933),
                            Email = "user10@user.com",
                            Gender = 0,
                            Name = "Name 10",
                            Password = "pass10",
                            Phone = "13556",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 4
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTeam", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("UserHasAsFavourite")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("FavouriteTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTournament", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Tournament", "Tournament")
                        .WithMany("UserHasAsFavourite")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("FavouriteTournaments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tournament");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTraining", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Training", "Training")
                        .WithMany("UserHasAsFavourite")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("FavouriteTrainings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Training");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Match", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.Team", "Referee")
                        .WithMany()
                        .HasForeignKey("RefereeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.Tournament", "Tournament")
                        .WithMany("Matches")
                        .HasForeignKey("TournamentId");

                    b.Navigation("Location");

                    b.Navigation("Referee");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.MatchTeam", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Match", "Match")
                        .WithMany("Teams")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("Matches")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Team", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "Owner")
                        .WithMany("OwnedTeams")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TeamCoach", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("Coaches")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("CoachedTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TeamPlayer", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("JoinedTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Tournament", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TournamentCompetitor", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("Tournaments")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.Tournament", "Tournament")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Training", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("Trainings")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TrainingParticipant", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Training", "Training")
                        .WithMany("Players")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("Trainings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Training");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Match", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Team", b =>
                {
                    b.Navigation("Coaches");

                    b.Navigation("Matches");

                    b.Navigation("Players");

                    b.Navigation("Tournaments");

                    b.Navigation("Trainings");

                    b.Navigation("UserHasAsFavourite");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Tournament", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("Teams");

                    b.Navigation("UserHasAsFavourite");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Training", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("UserHasAsFavourite");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.User", b =>
                {
                    b.Navigation("CoachedTeams");

                    b.Navigation("FavouriteTeams");

                    b.Navigation("FavouriteTournaments");

                    b.Navigation("FavouriteTrainings");

                    b.Navigation("JoinedTeams");

                    b.Navigation("OwnedTeams");

                    b.Navigation("Trainings");
                });
#pragma warning restore 612, 618
        }
    }
}
