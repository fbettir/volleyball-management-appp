// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VolleyballManagementAppBackend;

#nullable disable

namespace VolleyballAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VolleyballAPI.Entities.TournamentCompetitor", b =>
                {
                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TournamentId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("TournamentCompetitors");

                    b.HasData(
                        new
                        {
                            TournamentId = new Guid("a2764122-1831-4c8b-835b-b63717d3deb6"),
                            TeamId = new Guid("74faaddc-c386-4fc2-a0b4-9dae1981dec0")
                        },
                        new
                        {
                            TournamentId = new Guid("fa74e37d-fb20-468a-ba1a-5a040ca8afd9"),
                            TeamId = new Guid("63c8f8eb-1067-489e-ad14-52777ffbda39")
                        },
                        new
                        {
                            TournamentId = new Guid("3cad46e7-e901-4d6a-aa85-58bb13f4338e"),
                            TeamId = new Guid("2ea2d390-72c2-4081-a706-a54d73e99f9e")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TrainingParticipant", b =>
                {
                    b.Property<Guid>("PlayerDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlayerDetailsId", "TrainingId");

                    b.HasIndex("TrainingId");

                    b.ToTable("TrainingParticipants");

                    b.HasData(
                        new
                        {
                            PlayerDetailsId = new Guid("a8869498-a428-4446-ad95-a810744bd035"),
                            TrainingId = new Guid("a6e4f1a5-0865-42c3-9e8d-6a556d89b1d9")
                        },
                        new
                        {
                            PlayerDetailsId = new Guid("bd24906d-9c5f-485c-9d68-785708af1e49"),
                            TrainingId = new Guid("a6e4f1a5-0865-42c3-9e8d-6a556d89b1d9")
                        },
                        new
                        {
                            PlayerDetailsId = new Guid("d503c33c-56c7-4a56-b6a9-908f8386515e"),
                            TrainingId = new Guid("a6e4f1a5-0865-42c3-9e8d-6a556d89b1d9")
                        },
                        new
                        {
                            PlayerDetailsId = new Guid("f450060b-2a10-4aa4-bc2c-e11fab94a2df"),
                            TrainingId = new Guid("b0f7ca61-7594-4e68-a95b-96d27e48f8d3")
                        },
                        new
                        {
                            PlayerDetailsId = new Guid("2105dd07-dfb6-49df-8c2e-cfbb1aeccaa5"),
                            TrainingId = new Guid("b0f7ca61-7594-4e68-a95b-96d27e48f8d3")
                        },
                        new
                        {
                            PlayerDetailsId = new Guid("ee50ae98-2644-494f-a00c-ad500b60a1f3"),
                            TrainingId = new Guid("bfbeceae-dc69-456d-9e81-742de3889606")
                        },
                        new
                        {
                            PlayerDetailsId = new Guid("4ce50b70-c4c5-4037-b519-59df4afdd96b"),
                            TrainingId = new Guid("bfbeceae-dc69-456d-9e81-742de3889606")
                        },
                        new
                        {
                            PlayerDetailsId = new Guid("b76d79d7-80c0-4baa-bad8-8c8c0f929c90"),
                            TrainingId = new Guid("7107045c-ca72-4c9c-83f2-675dd631b271")
                        },
                        new
                        {
                            PlayerDetailsId = new Guid("b5b938d3-9491-49b7-93fa-20ee5a09f31b"),
                            TrainingId = new Guid("cadac11d-da6c-4687-b587-49fa2458a7d2")
                        },
                        new
                        {
                            PlayerDetailsId = new Guid("16df8456-3386-4833-8296-ebff0c1cd1a8"),
                            TrainingId = new Guid("cadac11d-da6c-4687-b587-49fa2458a7d2")
                        });
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.PlayerDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerNumber")
                        .HasColumnType("int");

                    b.Property<string>("Posts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketPass")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PlayerDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8869498-a428-4446-ad95-a810744bd035"),
                            Birthday = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2358),
                            Gender = 0,
                            Phone = "",
                            PlayerNumber = 0,
                            Posts = "Libero,Hitter,Receiver",
                            TicketPass = 0,
                            UserId = new Guid("cdc0a936-3687-4799-8991-00bf5c64bd3e")
                        },
                        new
                        {
                            Id = new Guid("bd24906d-9c5f-485c-9d68-785708af1e49"),
                            Birthday = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2365),
                            Gender = 0,
                            Phone = "",
                            PlayerNumber = 0,
                            Posts = "Libero,Hitter,Receiver",
                            TicketPass = 0,
                            UserId = new Guid("02441339-97aa-49b0-9ae6-04ea07573451")
                        },
                        new
                        {
                            Id = new Guid("d503c33c-56c7-4a56-b6a9-908f8386515e"),
                            Birthday = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2368),
                            Gender = 0,
                            Phone = "",
                            PlayerNumber = 0,
                            Posts = "Libero,Hitter,Receiver",
                            TicketPass = 0,
                            UserId = new Guid("ea89d17a-92fc-491a-971b-b0cc9b995539")
                        },
                        new
                        {
                            Id = new Guid("f450060b-2a10-4aa4-bc2c-e11fab94a2df"),
                            Birthday = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2371),
                            Gender = 0,
                            Phone = "",
                            PlayerNumber = 0,
                            Posts = "Libero,Hitter,Receiver",
                            TicketPass = 0,
                            UserId = new Guid("733c187c-3554-4b56-904c-aa35d5d17588")
                        },
                        new
                        {
                            Id = new Guid("2105dd07-dfb6-49df-8c2e-cfbb1aeccaa5"),
                            Birthday = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2374),
                            Gender = 0,
                            Phone = "",
                            PlayerNumber = 0,
                            Posts = "Libero,Hitter,Receiver",
                            TicketPass = 0,
                            UserId = new Guid("539dfaf7-81d2-425f-869f-d4b4afbe13e1")
                        },
                        new
                        {
                            Id = new Guid("ee50ae98-2644-494f-a00c-ad500b60a1f3"),
                            Birthday = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2376),
                            Gender = 0,
                            Phone = "",
                            PlayerNumber = 0,
                            Posts = "Libero,Hitter,Receiver",
                            TicketPass = 0,
                            UserId = new Guid("4be5fa8f-cf32-445d-95e5-b3dad4e501c2")
                        },
                        new
                        {
                            Id = new Guid("4ce50b70-c4c5-4037-b519-59df4afdd96b"),
                            Birthday = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2379),
                            Gender = 0,
                            Phone = "",
                            PlayerNumber = 0,
                            Posts = "Libero,Hitter,Receiver",
                            TicketPass = 0,
                            UserId = new Guid("c2c3c86b-da9e-4d19-b45f-a4cee5bf7736")
                        },
                        new
                        {
                            Id = new Guid("b76d79d7-80c0-4baa-bad8-8c8c0f929c90"),
                            Birthday = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2382),
                            Gender = 0,
                            Phone = "",
                            PlayerNumber = 0,
                            Posts = "Libero,Hitter,Receiver",
                            TicketPass = 0,
                            UserId = new Guid("0480f9a0-2946-471d-811c-be3e90e8b333")
                        },
                        new
                        {
                            Id = new Guid("b5b938d3-9491-49b7-93fa-20ee5a09f31b"),
                            Birthday = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2385),
                            Gender = 0,
                            Phone = "",
                            PlayerNumber = 0,
                            Posts = "Libero,Hitter,Receiver",
                            TicketPass = 0,
                            UserId = new Guid("b9cc6f90-c98b-445b-82fb-ccbda9d4beb6")
                        },
                        new
                        {
                            Id = new Guid("16df8456-3386-4833-8296-ebff0c1cd1a8"),
                            Birthday = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2388),
                            Gender = 0,
                            Phone = "",
                            PlayerNumber = 0,
                            Posts = "Libero,Hitter,Receiver",
                            TicketPass = 0,
                            UserId = new Guid("a43d8788-5c29-4f4c-85e0-590d54be197c")
                        });
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("74faaddc-c386-4fc2-a0b4-9dae1981dec0"),
                            Description = "Description Team 1",
                            Name = "Team 1",
                            Picture = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_095029_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("63c8f8eb-1067-489e-ad14-52777ffbda39"),
                            Description = "Description Team 2",
                            Name = "Team 2",
                            Picture = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_100756_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("2ea2d390-72c2-4081-a706-a54d73e99f9e"),
                            Description = "Description Team 3",
                            Name = "Team 3",
                            Picture = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_114305_adam.jpg"
                        },
                        new
                        {
                            Id = new Guid("df9aa13e-2818-4d18-b15e-8d903a0220e8"),
                            Description = "Description Team 4",
                            Name = "Team 4",
                            Picture = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_100756_opeter.jpg"
                        });
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.TeamCoach", b =>
                {
                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamCoach");
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.TeamPlayer", b =>
                {
                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeamId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("TeamPlayers");

                    b.HasData(
                        new
                        {
                            TeamId = new Guid("74faaddc-c386-4fc2-a0b4-9dae1981dec0"),
                            PlayerId = new Guid("a8869498-a428-4446-ad95-a810744bd035")
                        },
                        new
                        {
                            TeamId = new Guid("74faaddc-c386-4fc2-a0b4-9dae1981dec0"),
                            PlayerId = new Guid("bd24906d-9c5f-485c-9d68-785708af1e49")
                        },
                        new
                        {
                            TeamId = new Guid("74faaddc-c386-4fc2-a0b4-9dae1981dec0"),
                            PlayerId = new Guid("d503c33c-56c7-4a56-b6a9-908f8386515e")
                        },
                        new
                        {
                            TeamId = new Guid("74faaddc-c386-4fc2-a0b4-9dae1981dec0"),
                            PlayerId = new Guid("f450060b-2a10-4aa4-bc2c-e11fab94a2df")
                        },
                        new
                        {
                            TeamId = new Guid("74faaddc-c386-4fc2-a0b4-9dae1981dec0"),
                            PlayerId = new Guid("2105dd07-dfb6-49df-8c2e-cfbb1aeccaa5")
                        },
                        new
                        {
                            TeamId = new Guid("63c8f8eb-1067-489e-ad14-52777ffbda39"),
                            PlayerId = new Guid("ee50ae98-2644-494f-a00c-ad500b60a1f3")
                        });
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2764122-1831-4c8b-835b-b63717d3deb6"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2261),
                            Description = "Description Team 1",
                            Location = "Location tournament 1",
                            Name = "Tournament 1",
                            Picture = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_100756_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("fa74e37d-fb20-468a-ba1a-5a040ca8afd9"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2305),
                            Description = "Description Tournament 2",
                            Location = "Location tournament 2",
                            Name = "Tournament 2",
                            Picture = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_100756_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("3cad46e7-e901-4d6a-aa85-58bb13f4338e"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2308),
                            Description = "Description Tournament 3",
                            Location = "Location tournament 3",
                            Name = "Tournament 3",
                            Picture = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_100756_opeter.jpg"
                        });
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6e4f1a5-0865-42c3-9e8d-6a556d89b1d9"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2455),
                            Description = "Training1",
                            Location = "Training court 1",
                            TeamId = new Guid("74faaddc-c386-4fc2-a0b4-9dae1981dec0")
                        },
                        new
                        {
                            Id = new Guid("b0f7ca61-7594-4e68-a95b-96d27e48f8d3"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2458),
                            Description = "Training2",
                            Location = "Training court 2",
                            TeamId = new Guid("74faaddc-c386-4fc2-a0b4-9dae1981dec0")
                        },
                        new
                        {
                            Id = new Guid("bfbeceae-dc69-456d-9e81-742de3889606"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2460),
                            Description = "Training1",
                            Location = "Training court 3",
                            TeamId = new Guid("63c8f8eb-1067-489e-ad14-52777ffbda39")
                        },
                        new
                        {
                            Id = new Guid("7107045c-ca72-4c9c-83f2-675dd631b271"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2462),
                            Description = "Training4",
                            Location = "Training court 4",
                            TeamId = new Guid("2ea2d390-72c2-4081-a706-a54d73e99f9e")
                        },
                        new
                        {
                            Id = new Guid("cadac11d-da6c-4687-b587-49fa2458a7d2"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2464),
                            Description = "Training5",
                            Location = "Training court 5",
                            TeamId = new Guid("2ea2d390-72c2-4081-a706-a54d73e99f9e")
                        },
                        new
                        {
                            Id = new Guid("eeba3b02-48da-46bb-bd40-f382890ee942"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2466),
                            Description = "Training6",
                            Location = "Training court 6",
                            TeamId = new Guid("63c8f8eb-1067-489e-ad14-52777ffbda39")
                        },
                        new
                        {
                            Id = new Guid("97cb3b48-fbc6-4a2d-a829-e3606a651331"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2468),
                            Description = "Training7",
                            Location = "Training court 7",
                            TeamId = new Guid("2ea2d390-72c2-4081-a706-a54d73e99f9e")
                        },
                        new
                        {
                            Id = new Guid("009ca0f7-49ad-42ba-828a-77b76f3e005b"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2470),
                            Description = "Training8",
                            Location = "Training court 8",
                            TeamId = new Guid("63c8f8eb-1067-489e-ad14-52777ffbda39")
                        },
                        new
                        {
                            Id = new Guid("65e1a184-4d2d-4c62-bdfc-a92e29b76fe0"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2472),
                            Description = "Training9",
                            Location = "Training court 9",
                            TeamId = new Guid("df9aa13e-2818-4d18-b15e-8d903a0220e8")
                        },
                        new
                        {
                            Id = new Guid("a02eec8f-c563-47a6-a804-a68da4bf014f"),
                            Date = new DateTime(2023, 12, 11, 22, 40, 35, 186, DateTimeKind.Local).AddTicks(2475),
                            Description = "Training10",
                            Location = "Training court 10",
                            TeamId = new Guid("df9aa13e-2818-4d18-b15e-8d903a0220e8")
                        });
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cdc0a936-3687-4799-8991-00bf5c64bd3e"),
                            Email = "user1@user.com",
                            Name = "Name 1",
                            Password = "pass1",
                            Roles = "Coach,BasicUser"
                        },
                        new
                        {
                            Id = new Guid("02441339-97aa-49b0-9ae6-04ea07573451"),
                            Email = "user2@user.com",
                            Name = "Name 2",
                            Password = "pass2",
                            Roles = "Administrator,BasicUser"
                        },
                        new
                        {
                            Id = new Guid("ea89d17a-92fc-491a-971b-b0cc9b995539"),
                            Email = "user3@user.com",
                            Name = "Name 3",
                            Password = "pass3",
                            Roles = "BasicUser"
                        },
                        new
                        {
                            Id = new Guid("733c187c-3554-4b56-904c-aa35d5d17588"),
                            Email = "user4@user.com",
                            Name = "Name 4",
                            Password = "pass4",
                            Roles = "BasicUser"
                        },
                        new
                        {
                            Id = new Guid("539dfaf7-81d2-425f-869f-d4b4afbe13e1"),
                            Email = "user5@user.com",
                            Name = "Name 5",
                            Password = "pass5",
                            Roles = "Coach"
                        },
                        new
                        {
                            Id = new Guid("4be5fa8f-cf32-445d-95e5-b3dad4e501c2"),
                            Email = "user6@user.com",
                            Name = "Name 6",
                            Password = "pass6",
                            Roles = "BasicUser"
                        },
                        new
                        {
                            Id = new Guid("c2c3c86b-da9e-4d19-b45f-a4cee5bf7736"),
                            Email = "user7@user.com",
                            Name = "Name 7",
                            Password = "pass7",
                            Roles = "Coach"
                        },
                        new
                        {
                            Id = new Guid("0480f9a0-2946-471d-811c-be3e90e8b333"),
                            Email = "user8@user.com",
                            Name = "Name 8",
                            Password = "pass8",
                            Roles = "Administrator,BasicUser"
                        },
                        new
                        {
                            Id = new Guid("b9cc6f90-c98b-445b-82fb-ccbda9d4beb6"),
                            Email = "user9@user.com",
                            Name = "Name 9",
                            Password = "pass9",
                            Roles = "BasicUser"
                        },
                        new
                        {
                            Id = new Guid("a43d8788-5c29-4f4c-85e0-590d54be197c"),
                            Email = "user10@user.com",
                            Name = "Name 10",
                            Password = "pass10",
                            Roles = "BasicUser"
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TournamentCompetitor", b =>
                {
                    b.HasOne("VolleyballManagementAppBackend.Entities.Team", "Team")
                        .WithMany("Tournaments")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballManagementAppBackend.Entities.Tournament", "Tournament")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TrainingParticipant", b =>
                {
                    b.HasOne("VolleyballManagementAppBackend.Entities.PlayerDetails", "PlayerDetails")
                        .WithMany()
                        .HasForeignKey("PlayerDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballManagementAppBackend.Entities.Training", "Training")
                        .WithMany("Players")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerDetails");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.PlayerDetails", b =>
                {
                    b.HasOne("VolleyballManagementAppBackend.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.TeamCoach", b =>
                {
                    b.HasOne("VolleyballManagementAppBackend.Entities.Team", "Team")
                        .WithMany("Coaches")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballManagementAppBackend.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.TeamPlayer", b =>
                {
                    b.HasOne("VolleyballManagementAppBackend.Entities.PlayerDetails", "Player")
                        .WithMany("Teams")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballManagementAppBackend.Entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.Training", b =>
                {
                    b.HasOne("VolleyballManagementAppBackend.Entities.Team", "Team")
                        .WithMany("Trainings")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.PlayerDetails", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.Team", b =>
                {
                    b.Navigation("Coaches");

                    b.Navigation("Players");

                    b.Navigation("Tournaments");

                    b.Navigation("Trainings");
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.Tournament", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("VolleyballManagementAppBackend.Entities.Training", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
