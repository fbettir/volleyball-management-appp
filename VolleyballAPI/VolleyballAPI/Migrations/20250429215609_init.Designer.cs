// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VolleyballAPI;

#nullable disable

namespace VolleyballAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250429215609_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTeam", b =>
                {
                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("FavouriteTeams");

                    b.HasData(
                        new
                        {
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            UserId = new Guid("abb71323-a353-4b98-a76f-42cfee560596")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTournament", b =>
                {
                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TournamentId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("FavouriteTournaments");

                    b.HasData(
                        new
                        {
                            TournamentId = new Guid("67bc7627-99fb-4668-9e23-c5d22c2090cc"),
                            UserId = new Guid("abb71323-a353-4b98-a76f-42cfee560596")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTraining", b =>
                {
                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TrainingId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("FavouriteTrainings");

                    b.HasData(
                        new
                        {
                            TrainingId = new Guid("fafc4ba3-f94b-4474-839a-0833fb1ed0ef"),
                            UserId = new Guid("abb71323-a353-4b98-a76f-42cfee560596")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            Address = "Location Addr 1",
                            Name = "Location1"
                        },
                        new
                        {
                            Id = new Guid("2926a721-1d9f-4d7a-9ecf-0cec67376be0"),
                            Address = "Location Addr 2",
                            Name = "Location2"
                        },
                        new
                        {
                            Id = new Guid("40558881-5e32-473e-b8de-010294eda58b"),
                            Address = "Location Addr 3",
                            Name = "Location3"
                        },
                        new
                        {
                            Id = new Guid("be3bbc99-98a8-47ca-966a-216b7da2d5ca"),
                            Address = "Location Addr 4",
                            Name = "Location4"
                        },
                        new
                        {
                            Id = new Guid("b6ad4acc-15bc-4b0e-96f5-d0e2f722454d"),
                            Address = "Location Addr 5",
                            Name = "Location5"
                        },
                        new
                        {
                            Id = new Guid("c07ec20e-497e-4551-afd1-83d61c4bfa08"),
                            Address = "Location Addr 6",
                            Name = "Location6"
                        },
                        new
                        {
                            Id = new Guid("32f27976-6c64-4cd2-ab05-b1ae065e201a"),
                            Address = "Location Addr 7",
                            Name = "Location7"
                        },
                        new
                        {
                            Id = new Guid("30718d43-4ad8-4c28-9332-9fa9b39521fb"),
                            Address = "Location Addr 8",
                            Name = "Location8"
                        },
                        new
                        {
                            Id = new Guid("c18751ef-e3f4-4c0a-bf77-99b4783458e2"),
                            Address = "Location Addr 9",
                            Name = "Location9"
                        },
                        new
                        {
                            Id = new Guid("c1b5cde8-b146-457e-b3ce-f5d7114cf1da"),
                            Address = "Location Addr 10",
                            Name = "Location10"
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RefereeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("RefereeId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce904a40-747f-4663-8fad-d83964203c74"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7505),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae"),
                            StartTime = new DateTime(2024, 4, 3, 13, 55, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("08d07e14-35dd-43c3-b1ae-6d2dddf9e535"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7562),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143"),
                            StartTime = new DateTime(2024, 4, 3, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("11988845-a79b-425b-ad08-1a4077081b9c"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7565),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d"),
                            StartTime = new DateTime(2024, 4, 3, 14, 40, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("8ecddc55-7a81-4db7-aa53-9d307d4822c9"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7568),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            StartTime = new DateTime(2024, 4, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("7cca3f8a-fc8f-4795-aba6-6c6dbe854aa6"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7572),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1"),
                            StartTime = new DateTime(2024, 4, 3, 15, 25, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("6a4b8367-98bf-4bfe-b029-c0308dfa5f27"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7575),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d"),
                            StartTime = new DateTime(2024, 4, 3, 15, 50, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("13c11f44-9140-4fba-af21-52aa5288348c"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7579),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("b747efb4-e130-44c5-8370-392376cd9711"),
                            StartTime = new DateTime(2024, 4, 3, 16, 15, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("7c6e46a3-541a-45b2-b293-ff9ab81f0b05"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7582),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae"),
                            StartTime = new DateTime(2024, 4, 3, 16, 40, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("f74807f1-ffa4-4259-a1e1-efdc64bc0cf5"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7585),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("b747efb4-e130-44c5-8370-392376cd9711"),
                            StartTime = new DateTime(2024, 4, 3, 17, 5, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("172e18e2-9ef4-4ac0-b678-a213ada24264"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7642),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c"),
                            StartTime = new DateTime(2024, 4, 3, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("36f62e0f-af9b-452f-b159-b2d48080af7b"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7646),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae"),
                            StartTime = new DateTime(2024, 4, 3, 17, 55, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("974b7eb7-e231-45fe-9f4d-1f86c9f4bad1"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7650),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366"),
                            StartTime = new DateTime(2024, 4, 3, 18, 20, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("79899040-283e-4138-ae80-729d4bb97e51"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7653),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143"),
                            StartTime = new DateTime(2024, 4, 3, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("51e0e4ae-033a-4ad2-9d7e-5459adc0806d"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7657),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c"),
                            StartTime = new DateTime(2024, 4, 3, 19, 10, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("93f2e203-b14a-497a-9f23-926aa7bc8368"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7660),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("b747efb4-e130-44c5-8370-392376cd9711"),
                            StartTime = new DateTime(2024, 4, 3, 13, 55, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("723352fb-481f-4fa8-bc07-d40b2ec5dfe3"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7663),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1"),
                            StartTime = new DateTime(2024, 4, 3, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("c2ba3c08-31ba-431c-aa74-4f8ffc681f0d"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7667),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366"),
                            StartTime = new DateTime(2024, 4, 3, 14, 40, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("411a601a-c2fd-46ae-b927-d22aa19def2d"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7671),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143"),
                            StartTime = new DateTime(2024, 4, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("7ecaf8ed-21fb-4ded-a51b-bcf93743f454"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7675),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("b747efb4-e130-44c5-8370-392376cd9711"),
                            StartTime = new DateTime(2024, 4, 3, 15, 25, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("658213cc-bc38-4715-9e82-9dbcf2953870"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7678),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            StartTime = new DateTime(2024, 4, 3, 15, 50, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("f85ca4ac-221d-4249-a4b4-1cc4bcf65c27"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7682),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1"),
                            StartTime = new DateTime(2024, 4, 3, 16, 15, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("71b3a0a4-14e7-447c-84f4-d0d9a5ca9f43"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7686),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c"),
                            StartTime = new DateTime(2024, 4, 3, 16, 40, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("d5b8f3fb-0a85-4767-8821-f61a763435b8"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7689),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d"),
                            StartTime = new DateTime(2024, 4, 3, 17, 5, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("bd324064-6fbf-4c6a-8901-1140d7ace4c1"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7693),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366"),
                            StartTime = new DateTime(2024, 4, 3, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("c3d8f603-5109-442e-a0d5-c7414e8ab11c"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7696),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143"),
                            StartTime = new DateTime(2024, 4, 3, 17, 55, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("acc5af21-aa66-4ee4-ab34-33f0a4c31d51"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7700),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae"),
                            StartTime = new DateTime(2024, 4, 3, 18, 20, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("cb71f7ce-8a35-43d5-a373-3a1445f4957a"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7703),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            StartTime = new DateTime(2024, 4, 3, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("f5f8a506-8a42-4968-9cb5-f3d6d5f927c3"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7707),
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            RefereeId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1"),
                            StartTime = new DateTime(2024, 4, 3, 19, 10, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8")
                        },
                        new
                        {
                            Id = new Guid("dd83d8a1-9f6d-451f-bba6-591be02de993"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7710),
                            LocationId = new Guid("2926a721-1d9f-4d7a-9ecf-0cec67376be0"),
                            RefereeId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            StartTime = new DateTime(2024, 4, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("67bc7627-99fb-4668-9e23-c5d22c2090cc")
                        },
                        new
                        {
                            Id = new Guid("090d612c-daae-494c-b180-fefb739dc192"),
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(7714),
                            LocationId = new Guid("40558881-5e32-473e-b8de-010294eda58b"),
                            RefereeId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            StartTime = new DateTime(2024, 4, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            TournamentId = new Guid("a5c8681e-8e23-4eea-a540-50f96681c217")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.MatchTeam", b =>
                {
                    b.Property<Guid>("MatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MatchId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("MatchTeams");

                    b.HasData(
                        new
                        {
                            MatchId = new Guid("ce904a40-747f-4663-8fad-d83964203c74"),
                            TeamId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366")
                        },
                        new
                        {
                            MatchId = new Guid("ce904a40-747f-4663-8fad-d83964203c74"),
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c")
                        },
                        new
                        {
                            MatchId = new Guid("08d07e14-35dd-43c3-b1ae-6d2dddf9e535"),
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c")
                        },
                        new
                        {
                            MatchId = new Guid("08d07e14-35dd-43c3-b1ae-6d2dddf9e535"),
                            TeamId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d")
                        },
                        new
                        {
                            MatchId = new Guid("11988845-a79b-425b-ad08-1a4077081b9c"),
                            TeamId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae")
                        },
                        new
                        {
                            MatchId = new Guid("11988845-a79b-425b-ad08-1a4077081b9c"),
                            TeamId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143")
                        },
                        new
                        {
                            MatchId = new Guid("8ecddc55-7a81-4db7-aa53-9d307d4822c9"),
                            TeamId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae")
                        },
                        new
                        {
                            MatchId = new Guid("8ecddc55-7a81-4db7-aa53-9d307d4822c9"),
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1")
                        },
                        new
                        {
                            MatchId = new Guid("7cca3f8a-fc8f-4795-aba6-6c6dbe854aa6"),
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c")
                        },
                        new
                        {
                            MatchId = new Guid("7cca3f8a-fc8f-4795-aba6-6c6dbe854aa6"),
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a")
                        },
                        new
                        {
                            MatchId = new Guid("6a4b8367-98bf-4bfe-b029-c0308dfa5f27"),
                            TeamId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae")
                        },
                        new
                        {
                            MatchId = new Guid("6a4b8367-98bf-4bfe-b029-c0308dfa5f27"),
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711")
                        },
                        new
                        {
                            MatchId = new Guid("13c11f44-9140-4fba-af21-52aa5288348c"),
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c")
                        },
                        new
                        {
                            MatchId = new Guid("13c11f44-9140-4fba-af21-52aa5288348c"),
                            TeamId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae")
                        },
                        new
                        {
                            MatchId = new Guid("7c6e46a3-541a-45b2-b293-ff9ab81f0b05"),
                            TeamId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d")
                        },
                        new
                        {
                            MatchId = new Guid("7c6e46a3-541a-45b2-b293-ff9ab81f0b05"),
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1")
                        },
                        new
                        {
                            MatchId = new Guid("f74807f1-ffa4-4259-a1e1-efdc64bc0cf5"),
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c")
                        },
                        new
                        {
                            MatchId = new Guid("f74807f1-ffa4-4259-a1e1-efdc64bc0cf5"),
                            TeamId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143")
                        },
                        new
                        {
                            MatchId = new Guid("172e18e2-9ef4-4ac0-b678-a213ada24264"),
                            TeamId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d")
                        },
                        new
                        {
                            MatchId = new Guid("172e18e2-9ef4-4ac0-b678-a213ada24264"),
                            TeamId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae")
                        },
                        new
                        {
                            MatchId = new Guid("36f62e0f-af9b-452f-b159-b2d48080af7b"),
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c")
                        },
                        new
                        {
                            MatchId = new Guid("36f62e0f-af9b-452f-b159-b2d48080af7b"),
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1")
                        },
                        new
                        {
                            MatchId = new Guid("974b7eb7-e231-45fe-9f4d-1f86c9f4bad1"),
                            TeamId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143")
                        },
                        new
                        {
                            MatchId = new Guid("974b7eb7-e231-45fe-9f4d-1f86c9f4bad1"),
                            TeamId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d")
                        },
                        new
                        {
                            MatchId = new Guid("79899040-283e-4138-ae80-729d4bb97e51"),
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711")
                        },
                        new
                        {
                            MatchId = new Guid("79899040-283e-4138-ae80-729d4bb97e51"),
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c")
                        },
                        new
                        {
                            MatchId = new Guid("51e0e4ae-033a-4ad2-9d7e-5459adc0806d"),
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711")
                        },
                        new
                        {
                            MatchId = new Guid("51e0e4ae-033a-4ad2-9d7e-5459adc0806d"),
                            TeamId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d")
                        },
                        new
                        {
                            MatchId = new Guid("93f2e203-b14a-497a-9f23-926aa7bc8368"),
                            TeamId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d")
                        },
                        new
                        {
                            MatchId = new Guid("93f2e203-b14a-497a-9f23-926aa7bc8368"),
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a")
                        },
                        new
                        {
                            MatchId = new Guid("723352fb-481f-4fa8-bc07-d40b2ec5dfe3"),
                            TeamId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366")
                        },
                        new
                        {
                            MatchId = new Guid("723352fb-481f-4fa8-bc07-d40b2ec5dfe3"),
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a")
                        },
                        new
                        {
                            MatchId = new Guid("c2ba3c08-31ba-431c-aa74-4f8ffc681f0d"),
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1")
                        },
                        new
                        {
                            MatchId = new Guid("c2ba3c08-31ba-431c-aa74-4f8ffc681f0d"),
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711")
                        },
                        new
                        {
                            MatchId = new Guid("411a601a-c2fd-46ae-b927-d22aa19def2d"),
                            TeamId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143")
                        },
                        new
                        {
                            MatchId = new Guid("411a601a-c2fd-46ae-b927-d22aa19def2d"),
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711")
                        },
                        new
                        {
                            MatchId = new Guid("7ecaf8ed-21fb-4ded-a51b-bcf93743f454"),
                            TeamId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d")
                        },
                        new
                        {
                            MatchId = new Guid("7ecaf8ed-21fb-4ded-a51b-bcf93743f454"),
                            TeamId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366")
                        },
                        new
                        {
                            MatchId = new Guid("658213cc-bc38-4715-9e82-9dbcf2953870"),
                            TeamId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143")
                        },
                        new
                        {
                            MatchId = new Guid("658213cc-bc38-4715-9e82-9dbcf2953870"),
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1")
                        },
                        new
                        {
                            MatchId = new Guid("f85ca4ac-221d-4249-a4b4-1cc4bcf65c27"),
                            TeamId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366")
                        },
                        new
                        {
                            MatchId = new Guid("f85ca4ac-221d-4249-a4b4-1cc4bcf65c27"),
                            TeamId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143")
                        },
                        new
                        {
                            MatchId = new Guid("71b3a0a4-14e7-447c-84f4-d0d9a5ca9f43"),
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a")
                        },
                        new
                        {
                            MatchId = new Guid("71b3a0a4-14e7-447c-84f4-d0d9a5ca9f43"),
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711")
                        },
                        new
                        {
                            MatchId = new Guid("d5b8f3fb-0a85-4767-8821-f61a763435b8"),
                            TeamId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366")
                        },
                        new
                        {
                            MatchId = new Guid("d5b8f3fb-0a85-4767-8821-f61a763435b8"),
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1")
                        },
                        new
                        {
                            MatchId = new Guid("bd324064-6fbf-4c6a-8901-1140d7ace4c1"),
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a")
                        },
                        new
                        {
                            MatchId = new Guid("bd324064-6fbf-4c6a-8901-1140d7ace4c1"),
                            TeamId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143")
                        },
                        new
                        {
                            MatchId = new Guid("c3d8f603-5109-442e-a0d5-c7414e8ab11c"),
                            TeamId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366")
                        },
                        new
                        {
                            MatchId = new Guid("c3d8f603-5109-442e-a0d5-c7414e8ab11c"),
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711")
                        },
                        new
                        {
                            MatchId = new Guid("acc5af21-aa66-4ee4-ab34-33f0a4c31d51"),
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a")
                        },
                        new
                        {
                            MatchId = new Guid("acc5af21-aa66-4ee4-ab34-33f0a4c31d51"),
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1")
                        },
                        new
                        {
                            MatchId = new Guid("cb71f7ce-8a35-43d5-a373-3a1445f4957a"),
                            TeamId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366")
                        },
                        new
                        {
                            MatchId = new Guid("cb71f7ce-8a35-43d5-a373-3a1445f4957a"),
                            TeamId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae")
                        },
                        new
                        {
                            MatchId = new Guid("f5f8a506-8a42-4968-9cb5-f3d6d5f927c3"),
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a")
                        },
                        new
                        {
                            MatchId = new Guid("f5f8a506-8a42-4968-9cb5-f3d6d5f927c3"),
                            TeamId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae")
                        },
                        new
                        {
                            MatchId = new Guid("dd83d8a1-9f6d-451f-bba6-591be02de993"),
                            TeamId = new Guid("7a4d3e9f-4b73-4166-b07d-e1760feee279")
                        },
                        new
                        {
                            MatchId = new Guid("dd83d8a1-9f6d-451f-bba6-591be02de993"),
                            TeamId = new Guid("5baef5be-962f-4ffe-8066-d14258ad9c7a")
                        },
                        new
                        {
                            MatchId = new Guid("090d612c-daae-494c-b180-fefb739dc192"),
                            TeamId = new Guid("9526754c-9bcb-48b7-ab82-e33fa480d73c")
                        },
                        new
                        {
                            MatchId = new Guid("090d612c-daae-494c-b180-fefb739dc192"),
                            TeamId = new Guid("82fa73e5-4c9d-452a-83a6-b54b09433bce")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PictureLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            Description = "Description Team 1",
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            Name = "Team 1",
                            OwnerId = new Guid("abb71323-a353-4b98-a76f-42cfee560596"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_101126_adrian.jpg"
                        },
                        new
                        {
                            Id = new Guid("b747efb4-e130-44c5-8370-392376cd9711"),
                            Description = "Description Team 2",
                            LocationId = new Guid("2926a721-1d9f-4d7a-9ecf-0cec67376be0"),
                            Name = "Team 2",
                            OwnerId = new Guid("080cdd79-5e80-40cf-8cb3-56eac9ebe870"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_210101_kendras.jpg"
                        },
                        new
                        {
                            Id = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c"),
                            Description = "Description Team 3",
                            LocationId = new Guid("40558881-5e32-473e-b8de-010294eda58b"),
                            Name = "Team 3",
                            OwnerId = new Guid("26cad1ba-8bcd-41e9-be44-df5c6d334a55"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_111756_adrian.jpg"
                        },
                        new
                        {
                            Id = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1"),
                            Description = "Description Team 4",
                            LocationId = new Guid("be3bbc99-98a8-47ca-966a-216b7da2d5ca"),
                            Name = "Team 4",
                            OwnerId = new Guid("0306f5d2-225b-4919-88d8-f0feea3076ad"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_104600_adrian.jpg"
                        },
                        new
                        {
                            Id = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366"),
                            Description = "Description Team 5",
                            LocationId = new Guid("b6ad4acc-15bc-4b0e-96f5-d0e2f722454d"),
                            Name = "Team 5",
                            OwnerId = new Guid("26cad1ba-8bcd-41e9-be44-df5c6d334a55"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_104618_david.jpg"
                        },
                        new
                        {
                            Id = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae"),
                            Description = "Description Team 6",
                            LocationId = new Guid("c07ec20e-497e-4551-afd1-83d61c4bfa08"),
                            Name = "Team 6",
                            OwnerId = new Guid("f3eb28cc-30a1-44d7-a1db-3535ad9ed385"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_104459_david.jpg"
                        },
                        new
                        {
                            Id = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143"),
                            Description = "Description Team 7",
                            LocationId = new Guid("32f27976-6c64-4cd2-ab05-b1ae065e201a"),
                            Name = "Team 7",
                            OwnerId = new Guid("b977e43c-69ad-4349-b22b-de1ff681609d"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_111742_david.jpg"
                        },
                        new
                        {
                            Id = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d"),
                            Description = "Description Team 8",
                            LocationId = new Guid("30718d43-4ad8-4c28-9332-9fa9b39521fb"),
                            Name = "Team 8",
                            OwnerId = new Guid("2d3a884f-9fd4-4350-97f4-f8d1b80d3d6b"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190545_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("7a4d3e9f-4b73-4166-b07d-e1760feee279"),
                            Description = "Description Team 9",
                            LocationId = new Guid("c18751ef-e3f4-4c0a-bf77-99b4783458e2"),
                            Name = "Team 9",
                            OwnerId = new Guid("ec8ac721-9ae0-4215-8ced-3ab6e44d6721"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("5baef5be-962f-4ffe-8066-d14258ad9c7a"),
                            Description = "Description Team 10",
                            LocationId = new Guid("be3bbc99-98a8-47ca-966a-216b7da2d5ca"),
                            Name = "Team 10",
                            OwnerId = new Guid("abb71323-a353-4b98-a76f-42cfee560596"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_165442_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("9526754c-9bcb-48b7-ab82-e33fa480d73c"),
                            Description = "Description Team 11",
                            LocationId = new Guid("40558881-5e32-473e-b8de-010294eda58b"),
                            Name = "Team 11",
                            OwnerId = new Guid("abb71323-a353-4b98-a76f-42cfee560596"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20231014_muegyetemi_roplabda/2048/20231014_134530_opeter.jpg"
                        },
                        new
                        {
                            Id = new Guid("82fa73e5-4c9d-452a-83a6-b54b09433bce"),
                            Description = "Description Team 12",
                            LocationId = new Guid("be3bbc99-98a8-47ca-966a-216b7da2d5ca"),
                            Name = "Team 12",
                            OwnerId = new Guid("26cad1ba-8bcd-41e9-be44-df5c6d334a55"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20231014_muegyetemi_roplabda/2048/20231014_203137_opeter.jpg"
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TeamCoach", b =>
                {
                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamCoaches");

                    b.HasData(
                        new
                        {
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            UserId = new Guid("abb71323-a353-4b98-a76f-42cfee560596")
                        },
                        new
                        {
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            UserId = new Guid("080cdd79-5e80-40cf-8cb3-56eac9ebe870")
                        },
                        new
                        {
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711"),
                            UserId = new Guid("26cad1ba-8bcd-41e9-be44-df5c6d334a55")
                        },
                        new
                        {
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c"),
                            UserId = new Guid("0306f5d2-225b-4919-88d8-f0feea3076ad")
                        },
                        new
                        {
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1"),
                            UserId = new Guid("230b36f0-7772-41cc-ae5d-98e788dc07f6")
                        },
                        new
                        {
                            TeamId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366"),
                            UserId = new Guid("f3eb28cc-30a1-44d7-a1db-3535ad9ed385")
                        },
                        new
                        {
                            TeamId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae"),
                            UserId = new Guid("b977e43c-69ad-4349-b22b-de1ff681609d")
                        },
                        new
                        {
                            TeamId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143"),
                            UserId = new Guid("2d3a884f-9fd4-4350-97f4-f8d1b80d3d6b")
                        },
                        new
                        {
                            TeamId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d"),
                            UserId = new Guid("ec8ac721-9ae0-4215-8ced-3ab6e44d6721")
                        },
                        new
                        {
                            TeamId = new Guid("7a4d3e9f-4b73-4166-b07d-e1760feee279"),
                            UserId = new Guid("fb5ec3c3-cc36-42f7-a5b3-2ccb932cbaaf")
                        },
                        new
                        {
                            TeamId = new Guid("5baef5be-962f-4ffe-8066-d14258ad9c7a"),
                            UserId = new Guid("fb5ec3c3-cc36-42f7-a5b3-2ccb932cbaaf")
                        },
                        new
                        {
                            TeamId = new Guid("9526754c-9bcb-48b7-ab82-e33fa480d73c"),
                            UserId = new Guid("230b36f0-7772-41cc-ae5d-98e788dc07f6")
                        },
                        new
                        {
                            TeamId = new Guid("82fa73e5-4c9d-452a-83a6-b54b09433bce"),
                            UserId = new Guid("2d3a884f-9fd4-4350-97f4-f8d1b80d3d6b")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TeamPlayer", b =>
                {
                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamPlayers");

                    b.HasData(
                        new
                        {
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            UserId = new Guid("abb71323-a353-4b98-a76f-42cfee560596")
                        },
                        new
                        {
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711"),
                            UserId = new Guid("080cdd79-5e80-40cf-8cb3-56eac9ebe870")
                        },
                        new
                        {
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            UserId = new Guid("26cad1ba-8bcd-41e9-be44-df5c6d334a55")
                        },
                        new
                        {
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711"),
                            UserId = new Guid("0306f5d2-225b-4919-88d8-f0feea3076ad")
                        },
                        new
                        {
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a"),
                            UserId = new Guid("230b36f0-7772-41cc-ae5d-98e788dc07f6")
                        },
                        new
                        {
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c"),
                            UserId = new Guid("f3eb28cc-30a1-44d7-a1db-3535ad9ed385")
                        },
                        new
                        {
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c"),
                            UserId = new Guid("b977e43c-69ad-4349-b22b-de1ff681609d")
                        },
                        new
                        {
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c"),
                            UserId = new Guid("2d3a884f-9fd4-4350-97f4-f8d1b80d3d6b")
                        },
                        new
                        {
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1"),
                            UserId = new Guid("ec8ac721-9ae0-4215-8ced-3ab6e44d6721")
                        },
                        new
                        {
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1"),
                            UserId = new Guid("fb5ec3c3-cc36-42f7-a5b3-2ccb932cbaaf")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Categories")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDeadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Organizer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceType")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationPolicy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamPolicy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8"),
                            Categories = 5,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8248),
                            Description = "Description Tournament 1",
                            EntryDeadline = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8257),
                            LocationId = new Guid("2926a721-1d9f-4d7a-9ecf-0cec67376be0"),
                            Name = "Tournament 1",
                            Organizer = "Organizer 1",
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_211740_barczy.jpg",
                            PriceType = 16,
                            RegistrationPolicy = "Registration Policy 1",
                            TeamPolicy = "Team Policy 1"
                        },
                        new
                        {
                            Id = new Guid("67bc7627-99fb-4668-9e23-c5d22c2090cc"),
                            Categories = 4,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8261),
                            Description = "Description Tournament 2",
                            EntryDeadline = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8264),
                            LocationId = new Guid("40558881-5e32-473e-b8de-010294eda58b"),
                            Name = "Tournament 2",
                            Organizer = "Organizer 2",
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20241123_muegyetemi_roplabdatorna_november/2048/20241123_142046_kendras.jpg",
                            PriceType = 16,
                            RegistrationPolicy = "Registration Policy 2",
                            TeamPolicy = "Team Policy 2"
                        },
                        new
                        {
                            Id = new Guid("a5c8681e-8e23-4eea-a540-50f96681c217"),
                            Categories = 1,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8267),
                            Description = "Description Tournament 3",
                            EntryDeadline = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8270),
                            LocationId = new Guid("be3bbc99-98a8-47ca-966a-216b7da2d5ca"),
                            Name = "Tournament 3",
                            Organizer = "Organizer 3",
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_145814_kendras.jpg",
                            PriceType = 16,
                            RegistrationPolicy = "Registration Policy 3",
                            TeamPolicy = "Team Policy 3"
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TournamentCompetitor", b =>
                {
                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TournamentId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("TournamentCompetitors");

                    b.HasData(
                        new
                        {
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8"),
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a")
                        },
                        new
                        {
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8"),
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711")
                        },
                        new
                        {
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8"),
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c")
                        },
                        new
                        {
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8"),
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1")
                        },
                        new
                        {
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8"),
                            TeamId = new Guid("ee447fc5-eff5-486c-a2e8-09fe33607366")
                        },
                        new
                        {
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8"),
                            TeamId = new Guid("ecb06a9a-1c64-43eb-a4b2-4b8eed8645ae")
                        },
                        new
                        {
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8"),
                            TeamId = new Guid("e5bea32d-ae57-4315-99f7-09e57a580143")
                        },
                        new
                        {
                            TournamentId = new Guid("b34b3ba6-8124-4889-bd97-d8ea74e556e8"),
                            TeamId = new Guid("192dd49b-2342-4f72-8bf6-e9fd35d2de5d")
                        },
                        new
                        {
                            TournamentId = new Guid("67bc7627-99fb-4668-9e23-c5d22c2090cc"),
                            TeamId = new Guid("7a4d3e9f-4b73-4166-b07d-e1760feee279")
                        },
                        new
                        {
                            TournamentId = new Guid("67bc7627-99fb-4668-9e23-c5d22c2090cc"),
                            TeamId = new Guid("5baef5be-962f-4ffe-8066-d14258ad9c7a")
                        },
                        new
                        {
                            TournamentId = new Guid("a5c8681e-8e23-4eea-a540-50f96681c217"),
                            TeamId = new Guid("9526754c-9bcb-48b7-ab82-e33fa480d73c")
                        },
                        new
                        {
                            TournamentId = new Guid("a5c8681e-8e23-4eea-a540-50f96681c217"),
                            TeamId = new Guid("82fa73e5-4c9d-452a-83a6-b54b09433bce")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AcceptableTickets")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PictureLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("TeamId");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fafc4ba3-f94b-4474-839a-0833fb1ed0ef"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8382),
                            Description = "Training1",
                            LocationId = new Guid("3f425e29-41d7-4a03-b608-bed683d91510"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_152608_kendras.jpg",
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a")
                        },
                        new
                        {
                            Id = new Guid("42be052f-e266-412c-a32a-e5fb4c1eb281"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8387),
                            Description = "Training2",
                            LocationId = new Guid("2926a721-1d9f-4d7a-9ecf-0cec67376be0"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_182542_kendras.jpg",
                            TeamId = new Guid("8bddfdc7-0276-4460-b553-d789a707974a")
                        },
                        new
                        {
                            Id = new Guid("429051bb-91e2-49b0-a97c-56cb79d16491"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8390),
                            Description = "Training3",
                            LocationId = new Guid("40558881-5e32-473e-b8de-010294eda58b"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_192702_kendras.jpg",
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711")
                        },
                        new
                        {
                            Id = new Guid("aa22a8b4-9651-42b5-ae58-8b70f31aa8dc"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8393),
                            Description = "Training4",
                            LocationId = new Guid("40558881-5e32-473e-b8de-010294eda58b"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_114846_adrian.jpg",
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c")
                        },
                        new
                        {
                            Id = new Guid("03638c09-e23c-4541-a6c5-e1839497a67d"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8396),
                            Description = "Training5",
                            LocationId = new Guid("b6ad4acc-15bc-4b0e-96f5-d0e2f722454d"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_121150_adrian.jpg",
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c")
                        },
                        new
                        {
                            Id = new Guid("45223753-06eb-4028-9ec3-7271d57107fb"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8399),
                            Description = "Training6",
                            LocationId = new Guid("c07ec20e-497e-4551-afd1-83d61c4bfa08"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_130940_adrian.jpg",
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711")
                        },
                        new
                        {
                            Id = new Guid("9ae01dc7-1cd1-4509-8f0a-dee4f9ed5ebb"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8403),
                            Description = "Training7",
                            LocationId = new Guid("32f27976-6c64-4cd2-ab05-b1ae065e201a"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_162113_adrian.jpg",
                            TeamId = new Guid("64f6135e-0392-4f34-8c36-c5c32327870c")
                        },
                        new
                        {
                            Id = new Guid("0cc5e353-b7cb-4e8d-b43d-a61380dbbc31"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8406),
                            Description = "Training8",
                            LocationId = new Guid("30718d43-4ad8-4c28-9332-9fa9b39521fb"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_182355_gery.jpg",
                            TeamId = new Guid("b747efb4-e130-44c5-8370-392376cd9711")
                        },
                        new
                        {
                            Id = new Guid("c7621b5c-3e83-4be2-a052-1b9f2f7f3729"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8409),
                            Description = "Training9",
                            LocationId = new Guid("c18751ef-e3f4-4c0a-bf77-99b4783458e2"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2025/20250329_muegyetemi_roplabda/2048/20250329_215753_gyongyi.jpg",
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1")
                        },
                        new
                        {
                            Id = new Guid("5381d6e0-5219-4b30-9a5e-8fa53d14b3bd"),
                            AcceptableTickets = 5,
                            Date = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8412),
                            Description = "Training10",
                            LocationId = new Guid("c1b5cde8-b146-457e-b3ce-f5d7114cf1da"),
                            PictureLink = "https://spot.sch.bme.hu/photos/2024/20240921_muegyetemi_roplabda/2048/20240921_183319_kendras.jpg",
                            TeamId = new Guid("b6f032a0-0f30-4d47-83d4-6b0edefeb8a1")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TrainingParticipant", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "TrainingId");

                    b.HasIndex("TrainingId");

                    b.ToTable("TrainingParticipants");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("abb71323-a353-4b98-a76f-42cfee560596"),
                            TrainingId = new Guid("fafc4ba3-f94b-4474-839a-0833fb1ed0ef")
                        },
                        new
                        {
                            UserId = new Guid("080cdd79-5e80-40cf-8cb3-56eac9ebe870"),
                            TrainingId = new Guid("42be052f-e266-412c-a32a-e5fb4c1eb281")
                        },
                        new
                        {
                            UserId = new Guid("26cad1ba-8bcd-41e9-be44-df5c6d334a55"),
                            TrainingId = new Guid("429051bb-91e2-49b0-a97c-56cb79d16491")
                        },
                        new
                        {
                            UserId = new Guid("0306f5d2-225b-4919-88d8-f0feea3076ad"),
                            TrainingId = new Guid("aa22a8b4-9651-42b5-ae58-8b70f31aa8dc")
                        },
                        new
                        {
                            UserId = new Guid("230b36f0-7772-41cc-ae5d-98e788dc07f6"),
                            TrainingId = new Guid("03638c09-e23c-4541-a6c5-e1839497a67d")
                        },
                        new
                        {
                            UserId = new Guid("f3eb28cc-30a1-44d7-a1db-3535ad9ed385"),
                            TrainingId = new Guid("45223753-06eb-4028-9ec3-7271d57107fb")
                        },
                        new
                        {
                            UserId = new Guid("b977e43c-69ad-4349-b22b-de1ff681609d"),
                            TrainingId = new Guid("9ae01dc7-1cd1-4509-8f0a-dee4f9ed5ebb")
                        },
                        new
                        {
                            UserId = new Guid("2d3a884f-9fd4-4350-97f4-f8d1b80d3d6b"),
                            TrainingId = new Guid("0cc5e353-b7cb-4e8d-b43d-a61380dbbc31")
                        },
                        new
                        {
                            UserId = new Guid("ec8ac721-9ae0-4215-8ced-3ab6e44d6721"),
                            TrainingId = new Guid("c7621b5c-3e83-4be2-a052-1b9f2f7f3729")
                        },
                        new
                        {
                            UserId = new Guid("fb5ec3c3-cc36-42f7-a5b3-2ccb932cbaaf"),
                            TrainingId = new Guid("5381d6e0-5219-4b30-9a5e-8fa53d14b3bd")
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerNumber")
                        .HasColumnType("int");

                    b.Property<int>("Posts")
                        .HasColumnType("int");

                    b.Property<int>("PriceType")
                        .HasColumnType("int");

                    b.Property<int>("Roles")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("abb71323-a353-4b98-a76f-42cfee560596"),
                            Birthday = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8483),
                            Email = "user1@user.com",
                            Gender = 0,
                            Name = "Jancsi",
                            Password = "pass1",
                            Phone = "34214124",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 2,
                            Roles = 3
                        },
                        new
                        {
                            Id = new Guid("080cdd79-5e80-40cf-8cb3-56eac9ebe870"),
                            Birthday = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8490),
                            Email = "user2@user.com",
                            Gender = 1,
                            Name = "Aranka",
                            Password = "pass2",
                            Phone = "965463",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 5
                        },
                        new
                        {
                            Id = new Guid("26cad1ba-8bcd-41e9-be44-df5c6d334a55"),
                            Birthday = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8494),
                            Email = "user3@user.com",
                            Gender = 0,
                            Name = "Dani",
                            Password = "pass3",
                            Phone = "123555",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 4
                        },
                        new
                        {
                            Id = new Guid("0306f5d2-225b-4919-88d8-f0feea3076ad"),
                            Birthday = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8497),
                            Email = "user4@user.com",
                            Gender = 0,
                            Name = "Kristóf",
                            Password = "pass4",
                            Phone = "83568",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 4
                        },
                        new
                        {
                            Id = new Guid("230b36f0-7772-41cc-ae5d-98e788dc07f6"),
                            Birthday = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8501),
                            Email = "user5@user.com",
                            Gender = 0,
                            Name = "Lajos",
                            Password = "pass5",
                            Phone = "54337",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 4,
                            Roles = 2
                        },
                        new
                        {
                            Id = new Guid("f3eb28cc-30a1-44d7-a1db-3535ad9ed385"),
                            Birthday = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8505),
                            Email = "user6@user.com",
                            Gender = 0,
                            Name = "Péter",
                            Password = "pass6",
                            Phone = "4221",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 4
                        },
                        new
                        {
                            Id = new Guid("b977e43c-69ad-4349-b22b-de1ff681609d"),
                            Birthday = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8509),
                            Email = "user7@user.com",
                            Gender = 1,
                            Name = "Felícia",
                            Password = "pass7",
                            Phone = "32134",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 2
                        },
                        new
                        {
                            Id = new Guid("2d3a884f-9fd4-4350-97f4-f8d1b80d3d6b"),
                            Birthday = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8513),
                            Email = "user8@user.com",
                            Gender = 0,
                            Name = "Name 8",
                            Password = "pass8",
                            Phone = "893935",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 5
                        },
                        new
                        {
                            Id = new Guid("ec8ac721-9ae0-4215-8ced-3ab6e44d6721"),
                            Birthday = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8516),
                            Email = "user9@user.com",
                            Gender = 0,
                            Name = "Name 9",
                            Password = "pass9",
                            Phone = "2716717",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 4
                        },
                        new
                        {
                            Id = new Guid("fb5ec3c3-cc36-42f7-a5b3-2ccb932cbaaf"),
                            Birthday = new DateTime(2025, 4, 29, 23, 56, 8, 200, DateTimeKind.Local).AddTicks(8520),
                            Email = "user10@user.com",
                            Gender = 0,
                            Name = "Name 10",
                            Password = "pass10",
                            Phone = "13556",
                            PictureLink = "https://spot.sch.bme.hu/photos/2023/20230923_muegyetemi_roplabda/2048/20230923_190507_opeter.jpg",
                            PlayerNumber = 3,
                            Posts = 20,
                            PriceType = 1,
                            Roles = 4
                        });
                });

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTeam", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("UserHasAsFavourite")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("FavouriteTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTournament", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Tournament", "Tournament")
                        .WithMany("UserHasAsFavourite")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("FavouriteTournaments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tournament");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.FavouriteTraining", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Training", "Training")
                        .WithMany("UserHasAsFavourite")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("FavouriteTrainings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Training");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Match", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.Team", "Referee")
                        .WithMany()
                        .HasForeignKey("RefereeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.Tournament", "Tournament")
                        .WithMany("Matches")
                        .HasForeignKey("TournamentId");

                    b.Navigation("Location");

                    b.Navigation("Referee");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.MatchTeam", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Match", "Match")
                        .WithMany("Teams")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("Matches")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Team", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "Owner")
                        .WithMany("OwnedTeams")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TeamCoach", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("Coaches")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("CoachedTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TeamPlayer", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("JoinedTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Tournament", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TournamentCompetitor", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("Tournaments")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.Tournament", "Tournament")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Training", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.Team", "Team")
                        .WithMany("Trainings")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.TrainingParticipant", b =>
                {
                    b.HasOne("VolleyballAPI.Entities.Training", "Training")
                        .WithMany("Players")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolleyballAPI.Entities.User", "User")
                        .WithMany("Trainings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Training");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Match", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Team", b =>
                {
                    b.Navigation("Coaches");

                    b.Navigation("Matches");

                    b.Navigation("Players");

                    b.Navigation("Tournaments");

                    b.Navigation("Trainings");

                    b.Navigation("UserHasAsFavourite");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Tournament", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("Teams");

                    b.Navigation("UserHasAsFavourite");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.Training", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("UserHasAsFavourite");
                });

            modelBuilder.Entity("VolleyballAPI.Entities.User", b =>
                {
                    b.Navigation("CoachedTeams");

                    b.Navigation("FavouriteTeams");

                    b.Navigation("FavouriteTournaments");

                    b.Navigation("FavouriteTrainings");

                    b.Navigation("JoinedTeams");

                    b.Navigation("OwnedTeams");

                    b.Navigation("Trainings");
                });
#pragma warning restore 612, 618
        }
    }
}
